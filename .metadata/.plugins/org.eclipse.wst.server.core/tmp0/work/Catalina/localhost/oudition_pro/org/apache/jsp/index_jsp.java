/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.58
 * Generated at: 2020-12-09 05:46:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.sql.*;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(8);
    _jspx_dependants.put("/static/header.jsp", Long.valueOf(1607477681103L));
    _jspx_dependants.put("/page/oudition_lookup.jsp", Long.valueOf(1607492696990L));
    _jspx_dependants.put("/page/oudition_lookup_score.jsp", Long.valueOf(1607492687869L));
    _jspx_dependants.put("/static/index.jsp", Long.valueOf(1607477645704L));
    _jspx_dependants.put("/static/nav.jsp", Long.valueOf(1607477913817L));
    _jspx_dependants.put("/page/oudition_register.jsp", Long.valueOf(1607492780415L));
    _jspx_dependants.put("/static/footer.jsp", Long.valueOf(1607477699570L));
    _jspx_dependants.put("/page/oudition_lookup_rank.jsp", Long.valueOf(1607492712594L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/css.css\"></link>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("\t<h3>(과정평가형 정보처리산업기사) 오디션 관리 프로그램 ver 2019-06</h3>\r\n");
      out.write("</header>");
      out.write('	');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"index.jsp?section=oudition_register\">오디션등록</a></li>\r\n");
      out.write("\t\t<li><a href=\"index.jsp?section=oudition_lookup\">참가자목록조회</a></li>\r\n");
      out.write("\t\t<li><a href=\"index.jsp?section=oudition_lookup_score\">멘토점수조회</a></li>\r\n");
      out.write("\t\t<li><a href=\"index.jsp?section=oudition_lookup_rank\">참가자등수조회</a></li>\r\n");
      out.write("\t\t<li><a href=\"index.jsp\">홈으로</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("\r\n");

	String section = request.getParameter("section") != null ? request.getParameter("section") : "";

	switch(section) {
	case "oudition_register":
		
      out.write(' ');
      out.write("\r\n");
      out.write("<h3>오디션 등록</h3>\r\n");
      out.write("\r\n");
      out.write("<form action=\"action/insert_oudition.jsp\" name=\"action_form\">\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>참가번호</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=\"artist_id\">*참가번호는 (A000) 4자리입니다</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>참가자명</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=\"artist_name\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>생년월일</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"number\" name=\"artist_birth_year\"> 년\r\n");
      out.write("\t\t\t\t<input type=\"number\" name=\"artist_birth_month\"> 월\r\n");
      out.write("\t\t\t\t<input type=\"number\" name=\"artist_birth_day\"> 일\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>성별</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"artist_gender\" value=\"M\"> 남성\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"artist_gender\" value=\"F\"> 여성\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>특기</td>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<select name=\"telant\">\r\n");
      out.write("\t\t\t\t\t<option value=\"0\">특기선택</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"1\">댄스</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"2\">보컬</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"3\">랩</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>소속사</td>\r\n");
      out.write("\t\t\t<td><input type=\"text\" name=\"agency\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"오디션 등록\" onclick=\"submit_form()\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" value=\"다시쓰기\" onclick=\"reset_form()\">\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("function submit_form() {\r\n");
      out.write("\tif (document.action_form.artist_id.value === \"\") {\r\n");
      out.write("\t\talert(\"참가번호가 입력되지 않았습니다!\");\r\n");
      out.write("\t\tdocument.action_form.artist_id.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (document.action_form.artist_name.value === \"\") {\r\n");
      out.write("\t\talert(\"참가자명이 입력되지 않았습니다!\");\r\n");
      out.write("\t\tdocument.action_form.artist_name.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (document.action_form.artist_birth_year.value === \"\" || \r\n");
      out.write("\t\t\tdocument.action_form.artist_birth_month.value === \"\" ||\r\n");
      out.write("\t\t\tdocument.action_form.artist_birth_day.value === \"\" ) {\r\n");
      out.write("\t\talert(\"생년월일이 입력되지 않았습니다!\");\r\n");
      out.write("\t\tdocument.action_form.artist_birth_year.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (document.action_form.artist_gender.value === \"\") {\r\n");
      out.write("\t\talert(\"성별이 입력되지 않았습니다!\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (document.action_form.telant.selectedIndex === 0) {\r\n");
      out.write("\t\talert(\"특기가 입력되지 않았습니다!\");\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tif (document.action_form.agency.value === \"\") {\r\n");
      out.write("\t\talert(\"소속사가 입력되지 않았습니다!\");\r\n");
      out.write("\t\tdocument.action_form.agency.focus();\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\talert(\"참가신청이 정상적으로 등록되었습니다!\");\r\n");
      out.write("\tdocument.action_form.submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function reset_form() {\r\n");
      out.write("\talert(\"정보를 지우고 처음부터 다시 입력합니다!\");\r\n");
      out.write("\tdocument.action_form.reset();\r\n");
      out.write("\tdocument.action_form.artist_id.focus();\r\n");
      out.write("}\r\n");
      out.write("</script>");
      out.write(' ');

		break;
	case "oudition_lookup":
		
      out.write(' ');
      out.write("\r\n");
      out.write("<h3>참가자 목록 조회</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>참가번호</td>\r\n");
      out.write("\t<td>참가자명</td>\r\n");
      out.write("\t<td>생년월일</td>\r\n");
      out.write("\t<td>성별</td>\r\n");
      out.write("\t<td>특기</td>\r\n");
      out.write("\t<td>소속사</td>\r\n");
      out.write("</tr>\r\n");

try {
	Class.forName("oracle.jdbc.OracleDriver");
	Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
	
	Statement stmt = con.createStatement();
	ResultSet rs = stmt.executeQuery("SELECT ARTIST_ID, ARTIST_NAME, ARTIST_BIRTH, " +
									     "ARTIST_GENDER, TALENT, AGENCY " +
									 "FROM "+ 
									     "TBL_ARTIST_201905");
	while (rs.next()) {
		String talent = null;
		switch(rs.getString(5)) {
		case "1":
			talent = "보컬";
			break;
		case "2":
			talent = "댄스";
			break;
		case "3":
			talent = "랩";
			break;
		}
		
		String year = rs.getString(3).substring(0, 4);
		String month = rs.getString(3).substring(4, 6);
		String day = rs.getString(3).substring(6, 8);
		
		
      out.write(" \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(1) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(2) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(String.format("%s년 %s월 %s일", year, month, day) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(4).equals("F") ? "여" : "남" );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(talent );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(6) );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

	
	}
	stmt.close();
	con.close();
} catch (Exception e) {
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("</table>");
      out.write(' ');

		break;
	case "oudition_lookup_score":
		
      out.write(' ');
      out.write("\r\n");
      out.write("<h3>멘토 점수 조회</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>채점번호</td>\r\n");
      out.write("\t<td>참가번호</td>\r\n");
      out.write("\t<td>참가자명</td>\r\n");
      out.write("\t<td>생년월일</td>\r\n");
      out.write("\t<td>점수</td>\r\n");
      out.write("\t<td>평점</td>\r\n");
      out.write("\t<td>멘토</td>\r\n");
      out.write("</tr>\r\n");

try {
	Class.forName("oracle.jdbc.OracleDriver");
	Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
	
	Statement stmt = con.createStatement();
	ResultSet rs = stmt.executeQuery("SELECT " + 
							 	 	 "    POINT.SERIAL_NO, ARTIST.ARTIST_ID, ARTIST.ARTIST_NAME, artist.artist_birth, " + 
								 	 "    POINT.POINT, mento.mento_name " + 
									 "FROM " + 
									 "    TBL_MENTO_201905 MENTO, TBL_POINT_201905 POINT, TBL_ARTIST_201905 ARTIST " + 
									 "WHERE " + 
									 "    MENTO.MENTO_ID = POINT.MENTO_ID AND " + 
									 "    POINT.ARTIST_ID = ARTIST.ARTIST_ID");
	while (rs.next()) {
		String year = rs.getString("artist_birth").substring(0, 4);
		String month = rs.getString("artist_birth").substring(4, 6);
		String day = rs.getString("artist_birth").substring(6, 8);
		
		String rate = null;
		int point = rs.getInt(5);
		if (point >= 90) {
			rate = "A";
		}
		else if (point >= 80) {
			rate = "B";
		}
		else if (point >= 70) {
			rate = "C";
		}
		else if (point >= 60) {
			rate = "D";
		}
		else {
			rate = "F";
		}
		
		
      out.write(" \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(1) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(2) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(3) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(String.format("%s년 %s월 %s일", year, month, day) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getInt(5) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rate );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(6) );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

	
	}
	stmt.close();
	con.close();
} catch (Exception e) {
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("</table>");
      out.write(' ');

		break;
	case "oudition_lookup_rank":
		
      out.write(' ');
      out.write("\r\n");
      out.write("<h3>참가자 등수 조회</h3>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td>참가번호</td>\r\n");
      out.write("\t<td>참가자명</td>\r\n");
      out.write("\t<td>총점</td>\r\n");
      out.write("\t<td>평균</td>\r\n");
      out.write("\t<td>등수</td>\r\n");
      out.write("</tr>\r\n");

try {
	Class.forName("oracle.jdbc.OracleDriver");
	Connection con = DriverManager.getConnection("jdbc:oracle:thin:@//localhost:1521/xe", "system", "1234");
	
	Statement stmt = con.createStatement();
	
	String query = "SELECT " +
		    "ARTIST.ARTIST_ID, ARTIST.ARTIST_NAME, sum(POINT.POINT), avg(POINT.POINT) " +
		    "FROM " +
		    "    tbl_artist_201905 ARTIST, TBL_POINT_201905 POINT " +
		    "WHERE " +
		    "    POINT.ARTIST_ID = ARTIST.ARTIST_ID " +
		    "GROUP BY ARTIST.ARTIST_ID, ARTIST.ARTIST_NAME " +
		    "ORDER BY AVG(POINT.POINT) DESC";
	
	ResultSet rs = stmt.executeQuery(query);
	
	int rank = 0;
	while (rs.next()) {
		rank += 1;
		
      out.write(" \r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(1) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getString(2) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rs.getInt(3) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(String.format("%.2f", rs.getFloat(4)) );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print(rank );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

	
	}
	stmt.close();
	con.close();
} catch (Exception e) {
	e.printStackTrace();
}

      out.write("\r\n");
      out.write("</table>");
      out.write(' ');

	default: 
		
      out.write(' ');
      out.write("\r\n");
      out.write("<pre>\r\n");
      out.write("과정평가형 자격 CBQ\r\n");
      out.write("\r\n");
      out.write("국가직무능력표준(NCS: National Competency Standards)으로 설계된 교육\r\n");
      out.write("</pre>");
      out.write(' ');

	}
	

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<footer>\r\n");
      out.write("\t<h3>HRDKOREA Copyright&copy;2019 All rights reserved. JJJ Service of Korea</h3>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
